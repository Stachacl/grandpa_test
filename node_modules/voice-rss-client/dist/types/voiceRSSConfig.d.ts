import { Codec, Format, SpeechRate } from "./constants";
export declare const LanguagesAndSpeakers: {
    readonly "ar-eg": readonly ["Oda"];
    readonly "ar-sa": readonly ["Salim"];
    readonly "bg-bg": readonly ["Dimo"];
    readonly "ca-es": readonly ["Rut"];
    readonly "zh-cn": readonly ["Luli", "Shu", "Chow", "Wang"];
    readonly "zh-hk": readonly ["Jia", "Xia", "Chen"];
    readonly "zh-tw": readonly ["Akemi", "Lin", "Lee"];
    readonly "hr-hr": readonly ["Nikola"];
    readonly "cs-cz": readonly ["Josef"];
    readonly "da-dk": readonly ["Freja"];
    readonly "nl-be": readonly ["Daan"];
    readonly "nl-nl": readonly ["Lotte", "Bram"];
    readonly "en-au": readonly ["Zoe", "Isla", "Evie", "Jack"];
    readonly "en-ca": readonly ["Rose", "Clara", "Emma", "Mason"];
    readonly "en-gb": readonly ["Alice", "Nancy", "Lily", "Harry"];
    readonly "en-in": readonly ["Eka", "Jai", "Ajit"];
    readonly "en-ie": readonly ["Oran"];
    readonly "en-us": readonly ["Linda", "Amy", "Mary", "John", "Mike"];
    readonly "fi-fi": readonly ["Aada"];
    readonly "fr-ca": readonly ["Emile", "Olivia", "Logan", "Felix"];
    readonly "fr-fr": readonly ["Bette", "Iva", "Zola", "Axel"];
    readonly "fr-ch": readonly ["Theo"];
    readonly "de-at": readonly ["Lukas"];
    readonly "de-de": readonly ["Hanna", "Lina", "Jonas"];
    readonly "de-ch": readonly ["Tim"];
    readonly "el-gr": readonly ["Neo"];
    readonly "he-il": readonly ["Rami"];
    readonly "hi-in": readonly ["Puja", "Kabir"];
    readonly "hu-hu": readonly ["Mate"];
    readonly "id-id": readonly ["Intan"];
    readonly "it-it": readonly ["Bria", "Mia", "Pietro"];
    readonly "ja-jp": readonly ["Hina", "Airi", "Fumi", "Akira"];
    readonly "ko-kr": readonly ["Nari"];
    readonly "ms-my": readonly ["Aqil"];
    readonly "nb-no": readonly ["Marte", "Erik"];
    readonly "pl-pl": readonly ["Julia", "Jan"];
    readonly "pt-br": readonly ["Marcia", "Ligia", "Yara", "Dinis"];
    readonly "pt-pt": readonly ["Leonor"];
    readonly "ro-ro": readonly ["Doru"];
    readonly "ru-ru": readonly ["Olga", "Marina", "Peter"];
    readonly "sk-sk": readonly ["Beda"];
    readonly "sl-si": readonly ["Vid"];
    readonly "es-mx": readonly ["Juana", "Silvia", "Teresa", "Jose"];
    readonly "es-es": readonly ["Camila", "Sofia", "Luna", "Diego"];
    readonly "sv-se": readonly ["Molly", "Hugo"];
    readonly "ta-in": readonly ["Sai"];
    readonly "th-th": readonly ["Ukrit"];
    readonly "tr-tr": readonly ["Omer"];
};
export declare type Config = {
    [K in keyof typeof LanguagesAndSpeakers]: {
        /** The language you want to get an audio recording in */
        language: K;
        /** The name of the speaker whose voice you want to use for the audio, depends on language used */
        speaker?: typeof LanguagesAndSpeakers[K][number];
        /** The API key you use for authenticating the requests */
        apiKey: string;
        /** The text you want to get an audio recording for */
        text: string;
        /** The audio codec you want to get the audio in */
        audioCodec?: typeof Codec[number];
        /** The audio format you want to get the audio in */
        audioFormat?: typeof Format[number];
        /** The speed at which you want the audio recording to be recorded at. Accepts values from -10 to 10 */
        speechRate?: typeof SpeechRate[number];
        /** Whether to use the
         * {@link https://docs.microsoft.com/en-us/cortana/skills/speech-synthesis-markup-language SSML} format */
        ssml?: boolean;
        /** Whether to output the audio content in Base64 text format */
        base64?: boolean;
    };
}[keyof typeof LanguagesAndSpeakers];
