{"ast":null,"code":"var _jsxFileName = \"/Users/stacha/src/grandpa-test/src/components/CheckListForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//other way to do input - is to useRef hook, but I am using useState this time\n\n// interface that describes component's properties:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// <{onAdd():void}> = (props) - here I am letting TypeScript know that i am expecting onAdd void in the App.tst \nexport const CheckListForm = props => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const changeHandler = event => {\n    setTitle(event.target.value);\n  };\n  const keyPressHadler = event => {\n    if (event.key === \"Enter\") {\n      console.log(title);\n      //reset input field to empty after submit:\n      setTitle('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"imput-field mt2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: changeHandler,\n      onKeyPress: keyPressHadler,\n      type: \"text\",\n      id: \"title\",\n      autoFocus: true,\n      placeholder: \"Your custom check point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      className: \"active\",\n      children: \"Add your check point\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckListForm, \"1GNs5BG/zBCkOIT6WAuxDpPLhMw=\");\n_c = CheckListForm;\nexport default CheckListForm;\nvar _c;\n$RefreshReg$(_c, \"CheckListForm\");","map":{"version":3,"names":["React","useState","CheckListForm","props","title","setTitle","changeHandler","event","target","value","keyPressHadler","key","console","log"],"sources":["/Users/stacha/src/grandpa-test/src/components/CheckListForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n//other way to do input - is to useRef hook, but I am using useState this time\n\n// interface that describes component's properties:\ninterface CkeckListFormProps {\n  //i am expecting onAdd fnction with the type void - nothing to return, and it will have a title with the type sting:\n  onAdd(title:string): void\n}\n\n// <{onAdd():void}> = (props) - here I am letting TypeScript know that i am expecting onAdd void in the App.tst \nexport const CheckListForm: React.FC <{onAdd(title:string):void}> = (props) => {\n  const [title, setTitle] = useState<string>(\"\");\n  \n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\nconst keyPressHadler = (event: React.KeyboardEvent) => {\n  if (event.key === \"Enter\") {\n  console.log(title)\n  //reset input field to empty after submit:\n  setTitle('')\n  }\n}\n\n\n  return (\n    <div className=\"imput-field mt2\">\n      <input\n        value={title}\n        onChange={changeHandler}\n        onKeyPress={keyPressHadler}\n        type=\"text\"\n        id=\"title\"\n        autoFocus\n        placeholder=\"Your custom check point\"\n      />\n      <label htmlFor=\"title\" className=\"active\">\n        Add your check point\n      </label>\n    </div>\n  );\n};\n\nexport default CheckListForm;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;;AAEA;AAAA;AAMA;AACA,OAAO,MAAMC,aAAoD,GAAIC,KAAK,IAAK;EAAA;EAC7E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMK,aAAa,GAAIC,KAA0C,IAAK;IACpEF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAEH,MAAMC,cAAc,GAAIH,KAA0B,IAAK;IACrD,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;MAClB;MACAC,QAAQ,CAAC,EAAE,CAAC;IACZ;EACF,CAAC;EAGC,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,wBAC9B;MACE,KAAK,EAAED,KAAM;MACb,QAAQ,EAAEE,aAAc;MACxB,UAAU,EAAEI,cAAe;MAC3B,IAAI,EAAC,MAAM;MACX,EAAE,EAAC,OAAO;MACV,SAAS;MACT,WAAW,EAAC;IAAyB;MAAA;MAAA;MAAA;IAAA,QACrC,eACF;MAAO,OAAO,EAAC,OAAO;MAAC,SAAS,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEjC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAhCWR,aAAoD;AAAA,KAApDA,aAAoD;AAkCjE,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}